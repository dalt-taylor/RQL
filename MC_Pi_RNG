import numpy as np
import time

# Set the number of points for the Monte Carlo simulation
N_MC = 1000000  # You can change this value as needed

def estimate_pi(n):
    # Start timing
    start_time = time.time()
    
    # Generate random x and y values in range [-1, 1]
    x = np.random.uniform(-1, 1, n)
    y = np.random.uniform(-1, 1, n)
    
    # Use numpy array instead of a loop to determine the points inside the circle
    inside_circle = (x**2 + y**2) < 1
    
    # Count the number of points inside the unit circle
    count_inside = np.sum(inside_circle)
    
    # Calculate the estimate for pi
    pi_estimate = (count_inside / n) * 4
    
    # Print the estimate and the time taken
    print(f"Estimated value of pi: {pi_estimate}")
    print(f"Time taken: {time.time() - start_time} seconds")

# Call the function with the specified number of points
estimate_pi(N_MC)
